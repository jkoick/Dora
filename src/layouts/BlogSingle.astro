---
import BlogCard from '@/components/BlogCard.astro';
import ImageMod from '@/components/ImageMod.astro';
import Share from '@/components/Share.astro';
import { getSinglePage } from '@/lib/contentParser.astro';
import dateFormat from '@/lib/utils/dateFormat';
import similarItems from '@/lib/utils/similarItems';
import { humanize, markdownify, slugify } from '@/lib/utils/textConverter';
import type { CollectionEntry } from 'astro:content';
import { getEntry, render } from 'astro:content';

const COLLECTION_FOLDER = 'legal';
const postIndex = (await getEntry(
  COLLECTION_FOLDER,
  '-index'
)) as CollectionEntry<'legal'>;
const posts = await getSinglePage(COLLECTION_FOLDER);

const { post } = Astro.props;

const similarPosts = similarItems(post, posts);
const { Content } = await render(post);
const { image, date, title, categories } = post.data;
---

<section class="section-sm">
  <div class="container">
    <div class="lg:col-8 mx-auto">
      <ul class="mb-4 flex flex-wrap gap-y-2">
        <li class="mr-4 inline-block"></li>
      </ul>

      {title && <h1 class="mb-4 h3" set:html={markdownify(title)} />}
      <div class="content mt-8">
        <Content />
      </div>
    </div>
  </div>
</section>

<hr class="divider max-w-[1058px]" />

{
  postIndex.data.recentPosts &&
    postIndex.data.recentPosts.enable &&
    similarPosts &&
    similarPosts[1] && (
      <section class="section-sm">
        <div class="container-sm mx-auto">
          {postIndex.data.recentPosts.title && (
            <h2
              class="mb-8 lg:mb-8 text-center lg:col-8 mx-auto md:px-10"
              set:html={markdownify(postIndex.data.recentPosts.title)}
            />
          )}
          <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-5">
            {similarPosts.slice(0, 3).map((post) => (
              <BlogCard layout="boxed" post={post} />
            ))}
          </div>
        </div>
      </section>
    )
}
