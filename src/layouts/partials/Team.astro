---
import AnimatedCircles from '@/components/AnimatedCircles.astro';
import DotTitle from '@/components/DotTitle.astro';
import TeamSlider from '@/components/TeamSlider.astro';
import DynamicIcon from '@/helpers/DynamicIcon';
import { markdownify } from '@/lib/utils/textConverter';
import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';

const { team } = (
  (await getEntry('cooperation', '-index')) as CollectionEntry<'cooperation'>
).data;

const exampleList = [
  {
    heading: 'Our outputs are designed for plug-and-play integration into',
    items: [
      'ICT risk management frameworks',
      'Internal control reports and governance files',
      'Regulatory inspection documentation',
      'Business continuity and incident response policies',
    ],
  },
];
---

{
  team && team.enable && (
    <section class="section overflow-hidden">
      <div class="container-light relative">
        <div>
          {team.subtitle && (
            <div class="flex justify-center" data-aos="fade-up-sm">
              <DotTitle
                title={'Regulatory Alignment Without Infrastructure Burden'}
              />
            </div>
          )}
          {team.title && (
            <h2
              class="mb-6 lg:mb-12 text-center 2xl:col-10 mx-auto"
              data-aos="fade-up-sm"
              data-aos-delay="100"
            >
              Why Partner With Us
            </h2>
          )}
          <div class="mb-6 lg:mb-12 text-center 2xl:col-10 mx-auto">
            <p>Seamless Integration With Compliance Deliverables</p>
            {exampleList.map((group, groupIndex) => (
              <div class="mb-10" key={group.heading}>
                <h4 class="h5 mb-6 text-primary" data-aos="fade-up-sm">
                  {group.heading}
                </h4>
                <ul
                  class="text-text-dark font-normal flex flex-col justify-center"
                  data-aos={`${groupIndex % 2 === 0 ? 'fade-right-sm' : 'fade-left-sm'}`}
                >
                  {group.items.map((item, itemIndex) => (
                    <li class="relative mb-4 flex" key={itemIndex}>
                      <div class="pr-2 mt-[5px]">
                        <span class="bg-primary w-5 h-5 grid place-items-center rounded-full">
                          <DynamicIcon
                            icon="FaCheck"
                            className="text-white text-xs inline-block"
                          />
                        </span>
                      </div>
                      <span set:html={markdownify(item)} class="text-lg" />
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>

        {/* <TeamSlider members={team.members} /> */}

        <div class="absolute right-0 bottom-0 translate-y-1/2 translate-x-1/2">
          <AnimatedCircles />
        </div>
      </div>
    </section>
  )
}
