---
import AnimatedCircles from '@/components/AnimatedCircles.astro';
import DotTitle from '@/components/DotTitle.astro';
import ImageMod from '@/components/ImageMod.astro';
import DynamicIcon from '@/helpers/DynamicIcon';
import { markdownify } from '@/lib/utils/textConverter';
import { getEntry, type CollectionEntry } from 'astro:content';

const { features } = (
  (await getEntry('homepage', '-index')) as CollectionEntry<'homepage'>
).data;

const exampleList = [
  {
    heading: 'Examples of Test Types Performed',
    items: [
      'Penetration testing (from microenterprise-tier to TLPT)',
      'Vulnerability scans',
      'Open-source analyses',
      'Network security assessments',
      'Gap analyses',
      'Physical security reviews',
    ],
  },
  {
    heading: 'Additional Test Types',
    items: [
      'Source code reviews',
      'Scenario-based tests',
      'Compatibility testing',
      'Performance testing',
      'End-to-end testing',
    ],
  },
  {
    heading: 'Auxiliary Services',
    items: [
      'Audit-ready reports and regulatory mapping',
      'Ad-hoc regulatory advisory',
    ],
  },
];
---

{
  features && (
    <section class="section overflow-hidden">
      <div class="container bg-light pb-10 lg:pb-0">
        <div class="container-inner">
          <div class="mb-12 lg:mb-16" data-aos="fade-up-sm">
            {features.subtitle && <DotTitle title={features.subtitle} />}
            {features.title && (
              <h2 class="mb-8" set:html={markdownify(features.title)} />
            )}
            {features.description && (
              <div
                class="max-w-none text-lg leading-relaxed mb-12 text-justify"
                set:html={markdownify(features.description)}
              />
            )}
          </div>

          <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-8 lg:gap-12 items-start">
            {/* {features.list.map(
              (
                {
                  enable,
                  icon,
                  image,
                  title,
                  description,
                }: {
                  enable: boolean;
                  icon: string;
                  image: string;
                  title: string;
                  description: string;
                },
                index: number
              ) =>
                enable && (
                  <div
                    class="shadow bg-white text-center px-5 py-7 md:px-10 md:py-14 lg:py-12 xl:px-7 xl:py-9 mb-10 2xl:mb-16"
                    data-aos={`${index % 2 === 0 ? 'fade-right-sm' : 'fade-left-sm'}`}
                  >
                    {icon && (
                      <div class="flex justify-center mb-7">
                        <div class="bg-primary p-3 2xl:p-6 rounded-full inline-block">
                          <ImageMod
                            src={icon}
                            alt="icon"
                            class="w-[40px] h-[40px] invert-[-1] brightness-100"
                          />
                        </div>
                      </div>
                    )}
                    {title && (
                      <h3 class="h4 mb-8" set:html={markdownify(title)} />
                    )}
                    {description && (
                      <p
                        class="mb-8 text-base"
                        set:html={markdownify(description)}
                      />
                    )}
                    {image && (
                      <ImageMod
                        src={image}
                        alt="follower-growth"
                        width={464}
                        height={389}
                        class="w-full"
                      />
                    )}
                  </div>
                )
            )} */}

            {exampleList.map((group) => (
              <div class="flex flex-col mb-8 lg:mb-12" key={group.heading}>
                <h4
                  class="h5 mb-6 text-primary flex-shrink-0 min-h-[3.5rem]"
                  data-aos="fade-up-sm"
                >
                  {group.heading}
                </h4>
                <ul
                  class="text-text-dark font-normal space-y-4"
                  data-aos={`fade-up-sm`}
                >
                  {group.items.map((item, itemIndex) => (
                    <li class="relative flex items-start" key={itemIndex}>
                      <div class="pr-3 mt-[5px] flex-shrink-0">
                        <span class="bg-primary w-5 h-5 grid place-items-center rounded-full">
                          <DynamicIcon
                            icon="FaCheck"
                            className="text-white text-xs inline-block"
                          />
                        </span>
                      </div>
                      <span
                        set:html={markdownify(item)}
                        class="text-base leading-relaxed"
                      />
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>

          {features.cta.enable && (
            <div class="relative isolate mt-12 lg:mt-16" data-aos="fade-up-sm">
              <div class="bg-black py-10 lg:py-12 px-6 lg:px-12">
                {features.cta.title && (
                  <h4
                    class="h5 text-white text-center mb-8"
                    set:html={markdownify(features.cta.title)}
                  />
                )}
                {features.cta.button.enable && (
                  <div class="flex justify-center">
                    <a
                      href={features.cta.button.link}
                      class="btn btn-primary"
                      set:html={markdownify(features.cta.button.label)}
                    />
                  </div>
                )}
              </div>
              <div
                class="absolute bottom-0! left-1/2 -translate-x-1/2 translate-y-1/2 -z-10"
                data-aos="fade-in"
              >
                <AnimatedCircles scale={75} />
              </div>
            </div>
          )}
        </div>
      </div>
    </section>
  )
}
